services:
  postgres:
    image: ${PSG_DB_IMAGE_NAME}
    container_name: ${PSG_DB_CONTAINER_NAME}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  mongo:
    image: ${MONGO_DB_IMAGE_NAME}
    container_name: ${MONGO_DB_CONTAINER_NAME}
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    ports:
      - "${MONGO_DB_PORT}:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq-container
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_MQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_MQ_PASSWORD:-password}
    ports:
      - "${RABBIT_AMQ_PORT:-5672}:5672"
      - "${RABBIT_MANAGEMENT_PORT:-15672}:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    command: [ "sh", "-c", "rabbitmq-plugins enable rabbitmq_management && rabbitmq-server" ]
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres-data:
  mongo-data:
  rabbitmq-data:

networks:
  app-network:
    driver: bridge
